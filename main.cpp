#include <iostream>
#include "Graph.h"
#include "aux.cpp"

using namespace std;

int main() {
    vector<Station* > stationSet;
    readStation(&stationSet, "stations.csv");
    cout << "Hello World!";
}















/*
 *  1.1-menu
 *
 *  1.2-Similarly, you will also have to develop some basic functionality (accessible through
    your menu) to read and parse the provided data set files. This functionality will enable you (and the
    eventual user) to select alternative railway networks for analysis. With the extracted information, you
    are to create one (or more) appropriate graphs upon which you will carry out the requested tasks. The
    modelling of the graph is entirely up to you, so long as it is a sensible representation of the railway
    network and enables the correct application of the required algorithms.
 *
 *  1.3-Doxygen
 *
 *  2.1-Calculate the maximum number of trains that can simultaneously travel between
    two specific stations. Note that your implementation should take any valid source and destination
    stations as input;
 *
 *  2.2-Determine, from all pairs of stations, which ones (if more than one) require the
    most amount of trains when taking full advantage of the existing network capacity;
 *
 *  2.3-Indicate where management should assign larger budgets for the purchasing and
    maintenance of trains. That is, your implementation should be able to report the top-k municipalities
    and districts, regarding their transportation needs;
 *
 *  2.4-Report the maximum number of trains that can simultaneously arrive at a given station,
    taking into consideration the entire railway grid.
 *
 *  2.1-Calculate the maximum amount of trains that can simultaneously travel between
    two specific stations with minimum cost for the company. Note that your system should also take any
    valid source and destination stations as input;
 *
 *  4.1-Calculate the maximum number of trains that can simultaneously travel between
    two specific stations in a network of reduced connectivity. Reduced connectivity is understood as being
    a subgraph (generated by your system) of the original railway network. Note that your system should
    also take any valid source and destination stations as input;
 *
 *  4.2-Provide a report on the stations that are the most affected by each segment failure,
    i.e., the top-k most affected stations for each segment to be considered.
 *
 *  5.1-Use the (hopefully) user-friendly interface you have developed to illustrate the
    various algorithm results for a sample set of railway grids which you should develop specifically for the
    purposes of this demo. For instance, you can develop a small set of very modest railway networks for
    contrived capacities so that you can highlight the “correctness” of your solution. For instance, a grid
    that has a “constricted” segment where all traffic must go through, will clearly have a segment very
    “sensitive” to failures.
 * */